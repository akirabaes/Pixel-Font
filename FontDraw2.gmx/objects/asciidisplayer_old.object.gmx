<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite5</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mystring = ""
characters=string_upper("abcdefghijklmnopqrstuvwxyz.!?()1234567890[]+-/\*=")
characters2=string_upper("abcdefghijklmnopqrstuvwxyz1234567890")
hspacing = 0
vspacing = 1
space = 2

hh=0
ww=0

using = ascii3x5_2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
/*for(cc=1; cc&lt;=string_length(characters); cc+=1)
    {draw_sprite(1,cc-1,cc*4+1,1);}
*/

ww=0

w=2
h=4
x0=1
y0=1
x=x0
y=y0
for(letterpos=1; letterpos&lt;=string_length(mystring); letterpos+=1){
    letter = string_char_at(mystring,letterpos)
    letnum = ord(letter)
    letx = letnum % 16 * 3 +1
    lety = floor(letnum / 16) * 5 +1
    
    if(letter == "#"){
        x=x0
        y+=h+vspacing
    }
    else if letter == " "{
        x+=space+hspacing
        ww=max(ww,x)
    }
    else if letnum != -1
    {
        draw_sprite_part(using,0,letx,lety,w,h,x,y)
        x+=w+hspacing
        ww=max(ww,x)
    }
    else
    {
        draw_sprite(1,28,x,y)
        x+=w+hspacing
        ww=max(ww,x)
    }
}

ww=ww-hspacing+1
hh=y+h+1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timestring = string(current_year)+"-"+string(current_month)+"-"+string(current_weekday)+"-"+string(current_day)+
"-"+string(current_hour)+"-"+string(current_minute)+"-"+string(current_second)

name = "Scshot"+timestring+".png"


screen_save_part(name,0,0,ww,hh)

with(instance_create(0,0,message)){
    filename = other.name
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(keyboard_check_pressed(vk_enter)){
    mystring += "#"
}
else if(keyboard_check_pressed(vk_escape) or keyboard_check_pressed(vk_delete)){
    mystring = ""
}
else if(keyboard_check_pressed(vk_up)){
    vspacing += 1;
}
else if(keyboard_check_pressed(vk_down)){
    vspacing = max(0,vspacing-1);
}
else if(keyboard_check_pressed(vk_left)){
    if(hspacing==0){space=1}
    hspacing = max(0,hspacing-1)
}
else if(keyboard_check_pressed(vk_right)){
    if(space=1){space=2}
    else
    hspacing += 1;
}
else if(keyboard_check_pressed(vk_backspace)){
    mystring = string_copy(mystring,1,string_length(mystring)-1)
}
else
{
    if (keyboard_lastkey != -1)
        {
        mystring += string_upper(keyboard_lastchar);
        keyboard_lastkey = -1;
        }
/*
    for(letter=1; letter&lt;= string_length(characters2); letter +=1){
        lettercharacter = string_char_at(characters2,letter)
        if(keyboard_check_pressed(ord(lettercharacter))){
            mystring += lettercharacter
            break;
        }
    }*/
}

keyboard_lastchar = "";

//show_message(mystring);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(keyboard_check_pressed(vk_enter)){
    mystring += "#"
}
else if(keyboard_check_pressed(vk_escape) or keyboard_check_pressed(vk_delete)){
    mystring = ""
}
else if(keyboard_check_pressed(vk_up)){
    vspacing += 1;
}
else if(keyboard_check_pressed(vk_down)){
    vspacing = max(0,vspacing-1);
}
else if(keyboard_check_pressed(vk_left)){
    hspacing = max(0,hspacing-1)
}
else if(keyboard_check_pressed(vk_right)){
    hspacing += 1;
}
else if(keyboard_check_pressed(vk_backspace)){
    mystring = string_copy(mystring,1,string_length(mystring)-1)
}
else
{
    if (keyboard_lastkey != -1)
        {
        mystring += string_upper(keyboard_lastchar);
        keyboard_lastkey = -1;
        }
/*
    for(letter=1; letter&lt;= string_length(characters2); letter +=1){
        lettercharacter = string_char_at(characters2,letter)
        if(keyboard_check_pressed(ord(lettercharacter))){
            mystring += lettercharacter
            break;
        }
    }*/
}

keyboard_lastchar = "";

//show_message(mystring);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
